<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfanw.element.dao.mapper.SecurityRoleMapper">
    <resultMap id="BaseResultMap" type="com.mfanw.element.dao.entity.SecurityRoleEntity">
        <id column="key" jdbcType="BIGINT" property="key"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modifyTime" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>

    <sql id="BaseColumnList">
        `key`, name, description, createTime, modifyTime, status
    </sql>

    <sql id="BaseColumnListWithName">
        t.`key`, t.name, t.description, t.createTime, t.modifyTime, t.status
    </sql>

    <insert id="insert" parameterType="com.mfanw.element.dao.entity.SecurityRoleEntity">
        INSERT INTO
        security_role (name, description)
        VALUES (#{name, jdbcType=VARCHAR}, #{description, jdbcType=VARCHAR})
        <selectKey keyProperty="key" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM security_role WHERE `key` = #{key, jdbcType=BIGINT}
    </delete>

    <update id="update" parameterType="com.mfanw.element.dao.entity.SecurityRoleEntity">
        UPDATE security_role SET
        name = #{name, jdbcType=VARCHAR},
        description = #{description, jdbcType=VARCHAR},
        status = #{status, jdbcType=INTEGER}
        WHERE `key` = #{key, jdbcType=BIGINT}
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM security_role
        WHERE `key` = #{key, jdbcType=BIGINT}
    </select>

    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM security_role
    </select>

    <select id="getListByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnListWithName"/>
        FROM security_role t, security_user_role
        WHERE t.key = security_user_role.roleKey
        AND security_user_role.userId = #{userId, jdbcType=BIGINT}
    </select>
</mapper>